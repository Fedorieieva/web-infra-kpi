

services:
  postgres:
    image: postgres:14-alpine
    container_name: site_monitor_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: site_monitor_mq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running", "-q"]
      interval: 5s
      timeout: 5s
      retries: 5

  api-service:
    build:
      context: .
      dockerfile: infra/api-service/Dockerfile
    container_name: site_monitor_api
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped

  checker-worker:
    build:
      context: .
      dockerfile: infra/worker-service/Dockerfile
    container_name: site_monitor_worker
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped

volumes:
  postgres_data:

